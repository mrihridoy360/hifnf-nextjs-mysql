"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "_rsc_src_lib_fileUpload_ts";
exports.ids = ["_rsc_src_lib_fileUpload_ts"];
exports.modules = {

/***/ "(rsc)/./src/lib/fileUpload.ts":
/*!*******************************!*\
  !*** ./src/lib/fileUpload.ts ***!
  \*******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   uploadFile: () => (/* binding */ uploadFile),\n/* harmony export */   validateFile: () => (/* binding */ validateFile)\n/* harmony export */ });\n/* harmony import */ var fs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! fs */ \"fs\");\n/* harmony import */ var fs__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(fs__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! path */ \"path\");\n/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(path__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var uuid__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! uuid */ \"(rsc)/./node_modules/uuid/dist/esm/v4.js\");\n\n\n\n// Define allowed file types\nconst ALLOWED_IMAGE_TYPES = [\n    'image/jpeg',\n    'image/png',\n    'image/gif',\n    'image/webp'\n];\nconst ALLOWED_VIDEO_TYPES = [\n    'video/mp4',\n    'video/webm',\n    'video/ogg'\n];\n// Maximum file sizes (in bytes)\nconst MAX_IMAGE_SIZE = 5 * 1024 * 1024; // 5MB\nconst MAX_VIDEO_SIZE = 100 * 1024 * 1024; // 100MB\n/**\n * Validates a file based on its type and size\n */ function validateFile(file) {\n    // Check if file type is allowed\n    if (ALLOWED_IMAGE_TYPES.includes(file.type)) {\n        if (file.size > MAX_IMAGE_SIZE) {\n            return {\n                valid: false,\n                error: `Image size should not exceed ${MAX_IMAGE_SIZE / (1024 * 1024)}MB`\n            };\n        }\n    } else if (ALLOWED_VIDEO_TYPES.includes(file.type)) {\n        if (file.size > MAX_VIDEO_SIZE) {\n            return {\n                valid: false,\n                error: `Video size should not exceed ${MAX_VIDEO_SIZE / (1024 * 1024)}MB`\n            };\n        }\n    } else {\n        return {\n            valid: false,\n            error: 'File type not supported'\n        };\n    }\n    return {\n        valid: true\n    };\n}\n/**\n * Uploads a file to the server's filesystem\n */ async function uploadFile(file) {\n    try {\n        // Validate the file\n        const validation = validateFile(file);\n        if (!validation.valid) {\n            return {\n                success: false,\n                error: validation.error\n            };\n        }\n        // Determine file type and directory\n        let fileType;\n        let subDir;\n        if (ALLOWED_IMAGE_TYPES.includes(file.type)) {\n            fileType = 'image';\n            subDir = 'images';\n        } else if (ALLOWED_VIDEO_TYPES.includes(file.type)) {\n            fileType = 'video';\n            subDir = 'videos';\n        } else {\n            return {\n                success: false,\n                error: 'Unsupported file type'\n            };\n        }\n        // Create a unique filename\n        const fileExtension = file.name.split('.').pop() || '';\n        const fileName = `${(0,uuid__WEBPACK_IMPORTED_MODULE_2__[\"default\"])()}.${fileExtension}`;\n        // Get upload directory from environment variable or use default\n        const uploadDir = process.env.UPLOAD_DIR || 'public/uploads';\n        const dirPath = path__WEBPACK_IMPORTED_MODULE_1___default().join(process.cwd(), uploadDir, subDir);\n        const filePath = path__WEBPACK_IMPORTED_MODULE_1___default().join(dirPath, fileName);\n        // Ensure directory exists\n        if (!fs__WEBPACK_IMPORTED_MODULE_0___default().existsSync(dirPath)) {\n            fs__WEBPACK_IMPORTED_MODULE_0___default().mkdirSync(dirPath, {\n                recursive: true\n            });\n        }\n        // Convert File object to Buffer and save to filesystem\n        const arrayBuffer = await file.arrayBuffer();\n        const buffer = Buffer.from(arrayBuffer);\n        fs__WEBPACK_IMPORTED_MODULE_0___default().writeFileSync(filePath, buffer);\n        // Return the file URL (relative to public directory)\n        const url = `/uploads/${subDir}/${fileName}`;\n        return {\n            success: true,\n            filePath,\n            url,\n            fileType\n        };\n    } catch (error) {\n        console.error('Error uploading file:', error);\n        return {\n            success: false,\n            error: 'Failed to upload file'\n        };\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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UUFDZDRCLFFBQVE1QixLQUFLLENBQUMseUJBQXlCQTtRQUN2QyxPQUFPO1lBQ0xHLFNBQVM7WUFDVEgsT0FBTztRQUNUO0lBQ0Y7QUFDRiIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxtcmloclxcRGVza3RvcFxcaGlmbmZfbmV4dGpzX215c3FsXFxzcmNcXGxpYlxcZmlsZVVwbG9hZC50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgZnMgZnJvbSAnZnMnO1xuaW1wb3J0IHBhdGggZnJvbSAncGF0aCc7XG5pbXBvcnQgeyB2NCBhcyB1dWlkdjQgfSBmcm9tICd1dWlkJztcblxuLy8gRGVmaW5lIGFsbG93ZWQgZmlsZSB0eXBlc1xuY29uc3QgQUxMT1dFRF9JTUFHRV9UWVBFUyA9IFsnaW1hZ2UvanBlZycsICdpbWFnZS9wbmcnLCAnaW1hZ2UvZ2lmJywgJ2ltYWdlL3dlYnAnXTtcbmNvbnN0IEFMTE9XRURfVklERU9fVFlQRVMgPSBbJ3ZpZGVvL21wNCcsICd2aWRlby93ZWJtJywgJ3ZpZGVvL29nZyddO1xuXG4vLyBNYXhpbXVtIGZpbGUgc2l6ZXMgKGluIGJ5dGVzKVxuY29uc3QgTUFYX0lNQUdFX1NJWkUgPSA1ICogMTAyNCAqIDEwMjQ7IC8vIDVNQlxuY29uc3QgTUFYX1ZJREVPX1NJWkUgPSAxMDAgKiAxMDI0ICogMTAyNDsgLy8gMTAwTUJcblxuZXhwb3J0IGludGVyZmFjZSBGaWxlVXBsb2FkUmVzdWx0IHtcbiAgc3VjY2VzczogYm9vbGVhbjtcbiAgZmlsZVBhdGg/OiBzdHJpbmc7XG4gIHVybD86IHN0cmluZztcbiAgZXJyb3I/OiBzdHJpbmc7XG4gIGZpbGVUeXBlPzogJ2ltYWdlJyB8ICd2aWRlbyc7XG59XG5cbi8qKlxuICogVmFsaWRhdGVzIGEgZmlsZSBiYXNlZCBvbiBpdHMgdHlwZSBhbmQgc2l6ZVxuICovXG5leHBvcnQgZnVuY3Rpb24gdmFsaWRhdGVGaWxlKGZpbGU6IEZpbGUpOiB7IHZhbGlkOiBib29sZWFuOyBlcnJvcj86IHN0cmluZyB9IHtcbiAgLy8gQ2hlY2sgaWYgZmlsZSB0eXBlIGlzIGFsbG93ZWRcbiAgaWYgKEFMTE9XRURfSU1BR0VfVFlQRVMuaW5jbHVkZXMoZmlsZS50eXBlKSkge1xuICAgIGlmIChmaWxlLnNpemUgPiBNQVhfSU1BR0VfU0laRSkge1xuICAgICAgcmV0dXJuIHsgdmFsaWQ6IGZhbHNlLCBlcnJvcjogYEltYWdlIHNpemUgc2hvdWxkIG5vdCBleGNlZWQgJHtNQVhfSU1BR0VfU0laRSAvICgxMDI0ICogMTAyNCl9TUJgIH07XG4gICAgfVxuICB9IGVsc2UgaWYgKEFMTE9XRURfVklERU9fVFlQRVMuaW5jbHVkZXMoZmlsZS50eXBlKSkge1xuICAgIGlmIChmaWxlLnNpemUgPiBNQVhfVklERU9fU0laRSkge1xuICAgICAgcmV0dXJuIHsgdmFsaWQ6IGZhbHNlLCBlcnJvcjogYFZpZGVvIHNpemUgc2hvdWxkIG5vdCBleGNlZWQgJHtNQVhfVklERU9fU0laRSAvICgxMDI0ICogMTAyNCl9TUJgIH07XG4gICAgfVxuICB9IGVsc2Uge1xuICAgIHJldHVybiB7IHZhbGlkOiBmYWxzZSwgZXJyb3I6ICdGaWxlIHR5cGUgbm90IHN1cHBvcnRlZCcgfTtcbiAgfVxuXG4gIHJldHVybiB7IHZhbGlkOiB0cnVlIH07XG59XG5cbi8qKlxuICogVXBsb2FkcyBhIGZpbGUgdG8gdGhlIHNlcnZlcidzIGZpbGVzeXN0ZW1cbiAqL1xuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIHVwbG9hZEZpbGUoZmlsZTogRmlsZSk6IFByb21pc2U8RmlsZVVwbG9hZFJlc3VsdD4ge1xuICB0cnkge1xuICAgIC8vIFZhbGlkYXRlIHRoZSBmaWxlXG4gICAgY29uc3QgdmFsaWRhdGlvbiA9IHZhbGlkYXRlRmlsZShmaWxlKTtcbiAgICBpZiAoIXZhbGlkYXRpb24udmFsaWQpIHtcbiAgICAgIHJldHVybiB7IHN1Y2Nlc3M6IGZhbHNlLCBlcnJvcjogdmFsaWRhdGlvbi5lcnJvciB9O1xuICAgIH1cblxuICAgIC8vIERldGVybWluZSBmaWxlIHR5cGUgYW5kIGRpcmVjdG9yeVxuICAgIGxldCBmaWxlVHlwZTogJ2ltYWdlJyB8ICd2aWRlbyc7XG4gICAgbGV0IHN1YkRpcjogc3RyaW5nO1xuXG4gICAgaWYgKEFMTE9XRURfSU1BR0VfVFlQRVMuaW5jbHVkZXMoZmlsZS50eXBlKSkge1xuICAgICAgZmlsZVR5cGUgPSAnaW1hZ2UnO1xuICAgICAgc3ViRGlyID0gJ2ltYWdlcyc7XG4gICAgfSBlbHNlIGlmIChBTExPV0VEX1ZJREVPX1RZUEVTLmluY2x1ZGVzKGZpbGUudHlwZSkpIHtcbiAgICAgIGZpbGVUeXBlID0gJ3ZpZGVvJztcbiAgICAgIHN1YkRpciA9ICd2aWRlb3MnO1xuICAgIH0gZWxzZSB7XG4gICAgICByZXR1cm4geyBzdWNjZXNzOiBmYWxzZSwgZXJyb3I6ICdVbnN1cHBvcnRlZCBmaWxlIHR5cGUnIH07XG4gICAgfVxuXG4gICAgLy8gQ3JlYXRlIGEgdW5pcXVlIGZpbGVuYW1lXG4gICAgY29uc3QgZmlsZUV4dGVuc2lvbiA9IGZpbGUubmFtZS5zcGxpdCgnLicpLnBvcCgpIHx8ICcnO1xuICAgIGNvbnN0IGZpbGVOYW1lID0gYCR7dXVpZHY0KCl9LiR7ZmlsZUV4dGVuc2lvbn1gO1xuICAgIFxuICAgIC8vIEdldCB1cGxvYWQgZGlyZWN0b3J5IGZyb20gZW52aXJvbm1lbnQgdmFyaWFibGUgb3IgdXNlIGRlZmF1bHRcbiAgICBjb25zdCB1cGxvYWREaXIgPSBwcm9jZXNzLmVudi5VUExPQURfRElSIHx8ICdwdWJsaWMvdXBsb2Fkcyc7XG4gICAgY29uc3QgZGlyUGF0aCA9IHBhdGguam9pbihwcm9jZXNzLmN3ZCgpLCB1cGxvYWREaXIsIHN1YkRpcik7XG4gICAgY29uc3QgZmlsZVBhdGggPSBwYXRoLmpvaW4oZGlyUGF0aCwgZmlsZU5hbWUpO1xuICAgIFxuICAgIC8vIEVuc3VyZSBkaXJlY3RvcnkgZXhpc3RzXG4gICAgaWYgKCFmcy5leGlzdHNTeW5jKGRpclBhdGgpKSB7XG4gICAgICBmcy5ta2RpclN5bmMoZGlyUGF0aCwgeyByZWN1cnNpdmU6IHRydWUgfSk7XG4gICAgfVxuICAgIFxuICAgIC8vIENvbnZlcnQgRmlsZSBvYmplY3QgdG8gQnVmZmVyIGFuZCBzYXZlIHRvIGZpbGVzeXN0ZW1cbiAgICBjb25zdCBhcnJheUJ1ZmZlciA9IGF3YWl0IGZpbGUuYXJyYXlCdWZmZXIoKTtcbiAgICBjb25zdCBidWZmZXIgPSBCdWZmZXIuZnJvbShhcnJheUJ1ZmZlcik7XG4gICAgZnMud3JpdGVGaWxlU3luYyhmaWxlUGF0aCwgYnVmZmVyKTtcbiAgICBcbiAgICAvLyBSZXR1cm4gdGhlIGZpbGUgVVJMIChyZWxhdGl2ZSB0byBwdWJsaWMgZGlyZWN0b3J5KVxuICAgIGNvbnN0IHVybCA9IGAvdXBsb2Fkcy8ke3N1YkRpcn0vJHtmaWxlTmFtZX1gO1xuICAgIFxuICAgIHJldHVybiB7XG4gICAgICBzdWNjZXNzOiB0cnVlLFxuICAgICAgZmlsZVBhdGgsXG4gICAgICB1cmwsXG4gICAgICBmaWxlVHlwZVxuICAgIH07XG4gIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgY29uc29sZS5lcnJvcignRXJyb3IgdXBsb2FkaW5nIGZpbGU6JywgZXJyb3IpO1xuICAgIHJldHVybiB7XG4gICAgICBzdWNjZXNzOiBmYWxzZSxcbiAgICAgIGVycm9yOiAnRmFpbGVkIHRvIHVwbG9hZCBmaWxlJ1xuICAgIH07XG4gIH1cbn1cbiJdLCJuYW1lcyI6WyJmcyIsInBhdGgiLCJ2NCIsInV1aWR2NCIsIkFMTE9XRURfSU1BR0VfVFlQRVMiLCJBTExPV0VEX1ZJREVPX1RZUEVTIiwiTUFYX0lNQUdFX1NJWkUiLCJNQVhfVklERU9fU0laRSIsInZhbGlkYXRlRmlsZSIsImZpbGUiLCJpbmNsdWRlcyIsInR5cGUiLCJzaXplIiwidmFsaWQiLCJlcnJvciIsInVwbG9hZEZpbGUiLCJ2YWxpZGF0aW9uIiwic3VjY2VzcyIsImZpbGVUeXBlIiwic3ViRGlyIiwiZmlsZUV4dGVuc2lvbiIsIm5hbWUiLCJzcGxpdCIsInBvcCIsImZpbGVOYW1lIiwidXBsb2FkRGlyIiwicHJvY2VzcyIsImVudiIsIlVQTE9BRF9ESVIiLCJkaXJQYXRoIiwiam9pbiIsImN3ZCIsImZpbGVQYXRoIiwiZXhpc3RzU3luYyIsIm1rZGlyU3luYyIsInJlY3Vyc2l2ZSIsImFycmF5QnVmZmVyIiwiYnVmZmVyIiwiQnVmZmVyIiwiZnJvbSIsIndyaXRlRmlsZVN5bmMiLCJ1cmwiLCJjb25zb2xlIl0sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./src/lib/fileUpload.ts\n");

/***/ })

};
;